$schema: https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#
contentVersion: 1.0.0.0
parameters:
  # NAMING CONVENTION PARAMETERS
  locationCode:
    type: string
    metadata:
      description: The location code representing the location of the Log Analytics instance
    allowedValues:
    - auc
    - aue
    - ause
    - ea
    - jpe
    - krc
    - sea
  environmentCode:
    type: string
    metadata:
      description: The environment code where the Log Analytics instnce is deployed
    allowedValues:
    - dev
    - test
    - prod
    defaultValue: dev
  productOwnerCode:
    type: string
    metadata:
      description: The name of the product owner of the Log Analytics instance
    allowedValues:
    - finance
    - hr
    - marketing
    - devops
    defaultValue: devops

  # ADMIN PARAMETERS - DO NOT TOUCH
  locationLookup:
    type: object
    metadata:
      description: The reference to lookup location - DO NOT TOUCH
    defaultValue:
      auc: australiacentral
      aue: australiaeast
      ause: australiasoutheast
      ea: eastasia
      jpe: japaneast
      jpw: japanwest
      krc: koreacentral
      krs: koreasouth
      sea: southeastasia

  # RESOURCE SPECIFIC PARAMETERS
  logAnalyticsSolutionName:
    type: string
    metadata:
      description: The name of Log Analytics Solution instance.
  logAnalyticsPlanPromotionCode:
    type: string
    metadata:
      description: The promotion code of Log Analytics Solution plan.
  logAnalyticsPlanProduct:
    type: string
    metadata:
      description: The product name of Log Analytics Solution plan.
  logAnalyticsPlanPublisher:
    type: string
    metadata:
      description: The publisher name of Log Analytics Solution plan.

variables:
  # METADATA
  resourceName: "[concat(parameters('productOwnerCode'), '-{0}-', parameters('locationCode'), '-', parameters('environmentCode'))]"
  location: "[if(contains(parameters('locationLookup'), parameters('locationCode')), parameters('locationLookup')[parameters('locationCode')], resourceGroup().location)]"

  # LOG ANALYTICS SOLUTION
  logAnalytics:
    name: "[replace(variables('resourceName'), '{0}', 'logan')]"
    solution:
      name: "[concat(replace(variables('resourceName'), '{0}', 'logan'), '-', parameters('logAnalyticsSolutionName'))]"
      apiVersion: "[providers('Microsoft.OperationsManagement', 'solutions').apiVersions[0]]"
      location: "[variables('location')]"
    plan:
      name: "[concat(replace(variables('resourceName'), '{0}', 'logan'), '-', parameters('logAnalyticsSolutionName'))]"
      promotionCode: "[parameters('logAnalyticsPlanPromotionCode')]"
      product: "[parameters('logAnalyticsPlanProduct')]"
      publisher: "[parameters('logAnalyticsPlanPublisher')]"

  # TAGS
  tags:
    author: Justin Yoo
    profile: https://twitter.com/justinchronicle
    projectUrl: https://github.com/devkimchi/4-Aspects-Testing-Logic-Apps
    repositoryUrl: https://github.com/devkimchi/4-Aspects-Testing-Logic-Apps
    license: https://raw.githubusercontent.com/devkimchi/4-Aspects-Testing-Logic-Apps/master/LICENSE

resources:
- apiVersion: "[variables('logAnalytics').solution.apiVersion]"
  type: Microsoft.OperationsManagement/solutions
  location: "[variables('logAnalytics').solution.location]"
  tags: "[variables('tags')]"
  name: "[variables('logAnalytics').solution.name]"
  plan: "[variables('logAnalytics').plan]"
  properties:
    workspaceResourceId: "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalytics').name)]"
    containedResources:
    - "[concat(resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalytics').name), '/views/', variables('logAnalytics').solution.name)]"

outputs:
  logAnalyticsSolutionName:
    type: string
    value: "[reference(variables('logAnalytics').solution.name, variables('logAnalytics').solution.apiVersion, 'Full').resourceId]"
